// Code generated by MockGen. DO NOT EDIT.
// Source: editor.go

// Package executor is a generated GoMock package.
package executor

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockEditor is a mock of Editor interface.
type MockEditor struct {
	ctrl     *gomock.Controller
	recorder *MockEditorMockRecorder
}

// MockEditorMockRecorder is the mock recorder for MockEditor.
type MockEditorMockRecorder struct {
	mock *MockEditor
}

// NewMockEditor creates a new mock instance.
func NewMockEditor(ctrl *gomock.Controller) *MockEditor {
	mock := &MockEditor{ctrl: ctrl}
	mock.recorder = &MockEditorMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockEditor) EXPECT() *MockEditorMockRecorder {
	return m.recorder
}

// Edit mocks base method.
func (m *MockEditor) Edit(in []byte) ([]byte, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Edit", in)
	ret0, _ := ret[0].([]byte)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Edit indicates an expected call of Edit.
func (mr *MockEditorMockRecorder) Edit(in interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Edit", reflect.TypeOf((*MockEditor)(nil).Edit), in)
}
